{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\beauj\\\\App\\\\mario-plan\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app'; // for render on auth ready\n\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(firebase, fbConfig)));\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n};\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({\n  children\n}) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 31\n    }\n  }, \"Loading Screen...\");\n  return children;\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(AuthIsLoaded, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 11\n  }\n}))))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/beauj/App/mario-plan/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","reduxFirestore","getFirestore","createFirestoreInstance","ReactReduxFirebaseProvider","getFirebase","fbConfig","firebase","useSelector","isLoaded","store","withExtraArgument","profileSpecificProps","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","rrfProps","config","dispatch","AuthIsLoaded","children","auth","state","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,uBAAvC,QAAsE,iBAAtE;AACA,SAASC,0BAAT,EAAqCC,WAArC,QAAwD,sBAAxD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,cAArB,C,CACA;;AACA,SAASC,WAAT,QAA6B,aAA7B;AACA,SAASC,QAAT,QAA0B,sBAA1B;AAEA,MAAMC,KAAK,GAAGf,WAAW,CACvBG,WADuB,EAEvBD,OAAO,CACLD,eAAe,CAACI,KAAK,CAACW,iBAAN,CAAwB;AAAEN,EAAAA,WAAF;AAAeH,EAAAA;AAAf,CAAxB,CAAD,CADV,EAELD,cAAc,CAACM,QAAD,EAAUD,QAAV,CAFT,CAFgB,CAAzB;AAQA,MAAMM,oBAAoB,GAAG;AAC3BC,EAAAA,WAAW,EAAE,OADc;AAE3BC,EAAAA,sBAAsB,EAAE,IAFG;AAG3BC,EAAAA,sBAAsB,EAAE,KAHG;AAI3BC,EAAAA,gBAAgB,EAAE;AAJS,CAA7B;AAOA,MAAMC,QAAQ,GAAG;AACfV,EAAAA,QADe;AAEfW,EAAAA,MAAM,EAAEZ,QAFO;AAGfY,EAAAA,MAAM,EAAEN,oBAHO;AAIfO,EAAAA,QAAQ,EAAET,KAAK,CAACS,QAJD;AAKfhB,EAAAA;AALe,CAAjB;;AAQA,SAASiB,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAClC,QAAMC,IAAI,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAAChB,QAAN,CAAee,IAAzB,CAAxB;AACA,MAAI,CAACb,QAAQ,CAACa,IAAD,CAAb,EAAqB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACjB,SAAOD,QAAP;AACL;;AAED7B,QAAQ,CAACgC,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEd,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,0BAAD,oBAAgCO,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,CADF,EAUEQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVF,E,CAaA;AACA;AACA;;AACAhC,aAAa,CAACiC,UAAd","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n// for render on auth ready\nimport { useSelector  } from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase,fbConfig),\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n      return children\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}