{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","toString","calendar","ProjectList","projects","map","id","key","Dashboard","this","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","content","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credential","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","user","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.b816e05b.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    \n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><NavLink to=\"/\"><a onClick={props.signOut}>Log Out</a></NavLink></li>\n    <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1 \">{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credential) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credential.email,\r\n            credential.password\r\n        ).then(() => {\r\n            dispatch({\r\n                type: 'LOGIN_SUCCESS'\r\n            })\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'LOGIN_ERROR', err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({\r\n                type: 'SIGNOUT_SUCCESS'\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (user) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            user.email,\r\n            user.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                initials: user.firstName[0] + user.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({\r\n                type: 'SIGNUP_SUCCESS'\r\n            })\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'SIGNUP_ERROR', err\r\n            })\r\n        })\r\n    }\r\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Signup</NavLink></li>\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n// redux\nimport { connect } from 'react-redux'\n\n// components\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile}/>:<SignedOutLinks/>\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\n                {links}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)\n","import React from 'react'\n\nfunction Notifications() {\n    return (\n        <div>\n            <p>Notifications</p>\n        </div>\n    )\n}\n\nexport default Notifications\n","import React from 'react'\nimport moment from 'moment'\n\nfunction ProjectSummary({ project }) {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nfunction ProjectList({ projects }) {\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return <Link to={'/project/' + project.id}>\n                    <ProjectSummary project={project} key={project.id} />\n                </Link>\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList\n","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n    render() {\n        const { projects, auth } = this.props\n        if (!auth.uid) return <Redirect to='/signin'/>\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, null),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(Dashboard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n  const { project,auth } = props;\n  if (!auth.uid) return <Redirect to='/signin'/>\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'projects'\n  }])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\n// redux\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\n\nclass SignIn extends Component {\n\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n\n    render() {\n\n        const { authError, auth } = this.props\n\n        if (auth.uid) return <Redirect to='/'/>\n\n        return (\n\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                    </div>\n\n                    <div className=\"red-text center\">\n                        {authError ? <p>{authError}</p> : null}\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispathToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n\n    render() {\n\n        const { auth, authError } = this.props\n\n        if (auth.uid) return <Redirect to='/' />\n\n        return (\n\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n\n    state = {\n        title: '',\n        content: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n\n    render() {\n\n        const { auth } = this.props;\n\n        if (!auth.uid) return <Redirect to='/signin'/>\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create new project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}></input>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create project</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n    return ((dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({\n                type: 'CREATE_PROJECT',\n                project\n            })\n        }).catch((err)=>{\n            dispatch({\n                type: 'CREATE_PROJECT_ERROR',\n                err\n            })\n        })\n    })\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return {\n                ...state\n            }\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer","const initState = {\n    projects: [\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer","import { combineReducers } from 'redux'\nimport authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBHsTon-bk6QeUONbkfJ4Mk7rNhFxZpbx0\",\n    authDomain: \"mario-plan-fed49.firebaseapp.com\",\n    databaseURL: \"https://mario-plan-fed49.firebaseio.com\",\n    projectId: \"mario-plan-fed49\",\n    storageBucket: \"mario-plan-fed49.appspot.com\",\n    messagingSenderId: \"507707458251\",\n    appId: \"1:507707458251:web:b028ae6c9b6bf5c56d114e\",\n    measurementId: \"G-BREPC14S0Y\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({timestampsInSnapshots: true});\n\nexport default firebase","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n// for render on auth ready\nimport { useSelector  } from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase,fbConfig),\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n      return children\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}